plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.cloud.tools.jib' version '3.1.1'
}

subprojects {

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	configurations {
		provided
	}

	sourceSets {
		main.compileClasspath += configurations.provided
		test.compileClasspath += configurations.provided
		test.runtimeClasspath += configurations.provided
	}

	jar {
		enabled = true
	}

	jib {
		to {
			image = 'gcr.io/PROJECT/IMAGE'
		}
	}

	repositories {
		mavenCentral()
	}

	ext {
		set('springCloudVersion', "2023.0.1")
	}



	dependencies {

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-webflux'

		implementation 'org.springframework.boot:spring-boot-starter-actuator'

		implementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.36'

		implementation 'org.springframework.kafka:spring-kafka:3.1.3'


		implementation 'com.google.cloud.tools:jib-maven-plugin:3.4.1'

		runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

		//Lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		developmentOnly 'org.springframework.boot:spring-boot-devtools'


		//For all containers
		testImplementation 'org.testcontainers:testcontainers:1.19.7'

		testImplementation 'org.testcontainers:junit-jupiter'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'io.projectreactor:reactor-test'


	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	tasks.withType(Test) {
		useJUnitPlatform()
	}
}




